version: '3.9'

services:
  app:
    build: .
    container_name: image_tagging_app
    working_dir: /app
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app/src
      - ./.env:/app/.env
      - ./requirements.txt:/app/requirements.txt
    env_file:
      - .env
    environment:
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - OPENROUTER_MODEL=${OPENROUTER_MODEL:-qwen/qwen2.5-vl-72b-instruct:free}
    command: uvicorn src.controller.api_controller:app --host 0.0.0.0 --port 8000 --reload --reload-dir src
    networks:
      - monitor-net

  frontend:
    image: node:20-alpine
    container_name: image_tagging_frontend
    working_dir: /app
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    command: sh -c "npm ci && npm run dev"
    depends_on:
      - app
    networks:
      - monitor-net

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    networks:
      - monitor-net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000" # Mapped to 3001 to avoid conflict with your frontend
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - monitor-net

networks:
  monitor-net:
    driver: bridge

volumes:
  grafana-storage:
